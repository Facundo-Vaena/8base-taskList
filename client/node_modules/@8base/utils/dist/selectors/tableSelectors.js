"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hasPhoneFields = exports.hasAddressFields = exports.hasSmartFields = exports.hasScalarFields = exports.hasSwitchFields = exports.hasDateFields = exports.hasFileFields = exports.hasRelationFields = exports.hasListFields = exports.hasNonMetaFields = exports.getFieldNameById = exports.isListField = exports.isMetaField = exports.isSmartField = exports.isFileField = exports.isRelationField = exports.getFieldTypeById = exports.getFieldById = exports.getTable = void 0;

var R = _interopRequireWildcard(require("ramda"));

var _reselect = require("reselect");

var _constants = require("../constants");

var getTable = function getTable(table) {
  return table;
};

exports.getTable = getTable;

var getFieldById = function getFieldById(_ref, fieldId) {
  var fields = _ref.fields;
  return R.find(R.pipe(R.prop('id'), R.equals(fieldId)), fields) || {};
};

exports.getFieldById = getFieldById;
var getFieldTypeById = (0, _reselect.createSelector)(getFieldById, R.prop('fieldType'));
exports.getFieldTypeById = getFieldTypeById;
var isRelationField = (0, _reselect.createSelector)(getFieldTypeById, R.equals(_constants.FIELD_TYPE.RELATION));
exports.isRelationField = isRelationField;
var isFileField = (0, _reselect.createSelector)(getFieldTypeById, R.equals(_constants.FIELD_TYPE.FILE));
exports.isFileField = isFileField;
var isSmartField = (0, _reselect.createSelector)(getFieldTypeById, R.equals(_constants.FIELD_TYPE.SMART));
exports.isSmartField = isSmartField;
var isMetaField = (0, _reselect.createSelector)(getFieldById, R.propEq('isMeta', true));
exports.isMetaField = isMetaField;
var isListField = (0, _reselect.createSelector)(getFieldById, R.propEq('isList', true));
exports.isListField = isListField;
var getFieldNameById = (0, _reselect.createSelector)(getFieldById, R.prop('name'));
exports.getFieldNameById = getFieldNameById;
var hasNonMetaFields = R.pipe(R.propOr([], 'fields'), // $FlowIgnore
R.any(R.propEq('isMeta', false)));
exports.hasNonMetaFields = hasNonMetaFields;
var hasListFields = R.pipe(getTable, function (_ref2) {
  var fields = _ref2.fields;
  return !!fields.find(function (_ref3) {
    var isList = _ref3.isList;
    return isList;
  });
});
exports.hasListFields = hasListFields;
var hasRelationFields = R.pipe(getTable, function (_ref4) {
  var fields = _ref4.fields;
  return !!fields.find(function (_ref5) {
    var fieldType = _ref5.fieldType;
    return fieldType === _constants.FIELD_TYPE.RELATION;
  });
});
exports.hasRelationFields = hasRelationFields;
var hasFileFields = R.pipe(getTable, function (_ref6) {
  var fields = _ref6.fields;
  return !!fields.find(function (_ref7) {
    var fieldType = _ref7.fieldType;
    return fieldType === _constants.FIELD_TYPE.FILE;
  });
});
exports.hasFileFields = hasFileFields;
var hasDateFields = R.pipe(getTable, function (_ref8) {
  var fields = _ref8.fields;
  return !!fields.find(function (_ref9) {
    var fieldType = _ref9.fieldType;
    return fieldType === _constants.FIELD_TYPE.DATE;
  });
});
exports.hasDateFields = hasDateFields;
var hasSwitchFields = R.pipe(getTable, function (_ref10) {
  var fields = _ref10.fields;
  return !!fields.find(function (_ref11) {
    var fieldType = _ref11.fieldType;
    return fieldType === _constants.FIELD_TYPE.SWITCH;
  });
});
exports.hasSwitchFields = hasSwitchFields;
var hasScalarFields = R.pipe(getTable, function (_ref12) {
  var fields = _ref12.fields;
  return !!fields.find(function (_ref13) {
    var fieldType = _ref13.fieldType;
    return fieldType === _constants.FIELD_TYPE.TEXT || fieldType === _constants.FIELD_TYPE.NUMBER;
  });
});
exports.hasScalarFields = hasScalarFields;
var hasSmartFields = R.pipe(getTable, function (_ref14) {
  var fields = _ref14.fields;
  return !!fields.find(function (_ref15) {
    var fieldType = _ref15.fieldType;
    return fieldType === _constants.FIELD_TYPE.SMART;
  });
});
exports.hasSmartFields = hasSmartFields;
var hasAddressFields = R.pipe(getTable, function (_ref16) {
  var fields = _ref16.fields;
  return !!fields.find(function (_ref17) {
    var _ref17$fieldTypeAttri = _ref17.fieldTypeAttributes,
        fieldTypeAttributes = _ref17$fieldTypeAttri === void 0 ? {} : _ref17$fieldTypeAttri;
    return fieldTypeAttributes && fieldTypeAttributes.format === _constants.SMART_FORMATS.ADDRESS;
  });
});
exports.hasAddressFields = hasAddressFields;
var hasPhoneFields = R.pipe(getTable, function (_ref18) {
  var fields = _ref18.fields;
  return !!fields.find(function (_ref19) {
    var _ref19$fieldTypeAttri = _ref19.fieldTypeAttributes,
        fieldTypeAttributes = _ref19$fieldTypeAttri === void 0 ? {} : _ref19$fieldTypeAttri;
    return fieldTypeAttributes && fieldTypeAttributes.format === _constants.SMART_FORMATS.PHONE;
  });
});
exports.hasPhoneFields = hasPhoneFields;