"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.transformQueryObjectToString = void 0;

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var R = _interopRequireWildcard(require("ramda"));

var transformQueryObjectToString = function transformQueryObjectToString(queryObject, spacesParams) {
  var _ref = spacesParams || {},
      _ref$prevSpaceCount = _ref.prevSpaceCount,
      prevSpaceCount = _ref$prevSpaceCount === void 0 ? 4 : _ref$prevSpaceCount,
      _ref$spaceCount = _ref.spaceCount,
      spaceCount = _ref$spaceCount === void 0 ? 2 : _ref$spaceCount,
      _ref$initSpaceCount = _ref.initSpaceCount,
      initSpaceCount = _ref$initSpaceCount === void 0 ? 2 : _ref$initSpaceCount;

  var queryString = Object.keys(queryObject).reduce(function (accum, queryElement) {
    var spaces = R.repeat(' ', prevSpaceCount + spaceCount).join('');

    if ((0, _typeof2.default)(queryObject[queryElement]) === 'object') {
      var innerObjectString = transformQueryObjectToString(queryObject[queryElement], {
        prevSpaceCount: prevSpaceCount,
        initSpaceCount: initSpaceCount,
        spaceCount: initSpaceCount + spaceCount
      });
      accum += "\n".concat(spaces).concat(queryElement, " {").concat(innerObjectString, "\n").concat(spaces, "}");
    } else {
      accum += "\n".concat(spaces).concat(queryObject[queryElement]);
    }

    return accum;
  }, '');
  return queryString;
};

exports.transformQueryObjectToString = transformQueryObjectToString;